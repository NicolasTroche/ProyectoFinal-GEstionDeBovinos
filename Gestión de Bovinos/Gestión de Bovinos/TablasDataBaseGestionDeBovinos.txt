#################
Debe crear el Usuario ingresando el Usuario y la Contraseña dentro de las comillas("") en las líneas siguientes.
Ingrese sus datos y pegue todo el código después de los # en el gestor MySQL Workbench en una pestaña de consultas SQL (SQL Query Tab).
#################

/* Ingrese el usuario*/
SET @UsuarioB = "Usuario";

/* Ingrese la Contraseña*/
SET @PasswordB = "Contraseña";

create database db_gestiondebovinos;
use db_gestiondebovinos;

CREATE USER 'adminBovinos'@'localhost' IDENTIFIED BY 'adminBovinos';

GRANT ALL PRIVILEGES ON db_gestiondebovinos. * TO 'adminBovinos'@'localhost';

create table Usuario (
idUsuario int auto_increment primary key,
nombreUsuario varchar(30) unique not null,
passwordUsuario varchar(30) unique not null
);

insert into usuario  (nombreUsuario, passwordusuario) values(@UsuarioB ,@PasswordB);

create table Raza (
idRaza int auto_increment primary key,
tipo varchar(30) unique not null
);

create table Enfermedad (
idEnfermedad int auto_increment primary key,
nombre varchar(30) unique not null
);

create table Bovino (
idBovino int auto_increment primary key,
caravanaBovino varchar(10) unique not null,
fechaNacimiento date not null,
bajaLogica bool default(false),
foto longblob,
idRaza int not null,
constraint FK_BovinoRaza foreign key(idRaza) references Raza(idRaza)
);

create table Macho (
idMacho int primary key,
tipo varchar(30) not null,
constraint FK_MachoBovino foreign key(idMacho) references Bovino(idBovino)
);

create table Hembra (
idHembra int primary key,
constraint FK_HembraBovino foreign key(idHembra) references Bovino(idBovino)
);

create table Produccion (
idProduccion int auto_increment primary key,
primeraProduccion numeric(4,2) not null,
segundaProduccion numeric(4,2) not null,
produccionTotal numeric(4,2) default(primeraProduccion+segundaProduccion),
proteina numeric(4,2) not null,
grasa numeric(4,2) not null,
celulaSomatica numeric(7) not null,
fecha date not null,
idHembra int not null,
constraint FK_ProduccionHembra foreign key(idHembra) references Hembra(idHembra),
constraint UQ_ProduccionHembra unique(idProduccion,fecha,idHembra)
);

create table EstadoDelBovino(
idEstadoDelBovino int auto_increment primary key,
estado varchar(30) unique not null
);


create table EventosDeSanidad(
idEventoDeSanidad int auto_increment primary key,
fecha date not null,
detalle tinytext,
idHembra int not null,
constraint FK_EventosDeSanidadHembra foreign key(idHembra) references Hembra(idHembra)
);

create table Celo(
idCelo int primary key,
causa varchar(30),
constraint FK_CeloEventosDeSanidad foreign key(idCelo) references EventosDeSanidad(idEventoDeSanidad) ON DELETE CASCADE
);

create table Aborto(
idAborto int primary key,
causa varchar(30),
constraint FK_AbortoEventosDeSanidad foreign key(idAborto) references EventosDeSanidad(idEventoDeSanidad) ON DELETE CASCADE
);

create table Parto(
idParto int primary key,
tipo varchar(30) not null,
constraint FK_PartoEventosDeSanidad foreign key(idParto) references EventosDeSanidad(idEventoDeSanidad) ON DELETE CASCADE
);

create table Tacto(
idTacto int primary key,
resultado varchar(30) not null,
diagnostico tinytext,
constraint FK_TactoEventosDeSanidad foreign key(idTacto) references EventosDeSanidad(idEventoDeSanidad) ON DELETE CASCADE
);

create table Secado(
idSecado int primary key,
causa varchar(30) not null,
constraint FK_SecadoEventosDeSanidad foreign key(idSecado) references EventosDeSanidad(idEventoDeSanidad) ON DELETE CASCADE
);

create table Inseminacion(
idInseminacion int primary key,
idMacho int not null,
constraint FK_InseminacionMacho foreign key(idMacho) references Macho(idMacho),
constraint FK_InseminacionEventosDeSanidad foreign key(idInseminacion) references EventosDeSanidad(idEventoDeSanidad) ON DELETE CASCADE
);

create table Padece(
idEnfermedad int,
idBovino int,
fechaInicio date not null,
fechaFinalizacion date,
primary key(idEnfermedad,idBovino,fechaInicio),
constraint FK_PadeceBovino foreign key(idBovino) references Bovino(idBovino),
constraint FK_PadeceEnfermedad foreign key(idEnfermedad) references Enfermedad(idEnfermedad)
);


create table Tratamiento(
idTratamiento int auto_increment,
idBovino int,
idEnfermedad int,
fechaInicioContagio date,
detalle tinytext,
fechaInicio date not null,
fechaFinalizacion date ,
constraint CK_Fechas check(fechaFinalizacion >= fechaInicio),
constraint FK_TratamientoPadece foreign key(idEnfermedad, idBovino, fechaInicioContagio) references Padece(idEnfermedad, idBovino, fechaInicio),
primary key(idTratamiento,idBovino,idEnfermedad,fechaInicioContagio)
);

create table Parentesco(
idBovino int,
idBovinoPadre int,
tipoParentesco varchar(30) not null,
primary key(idBovino, idBovinoPadre),
constraint FK_BovinoHijo foreign key(idBovino) references Bovino(idBovino),
constraint FK_BovinoPadre foreign key(idBovinoPadre) references Bovino(idBovino)
);

create table EstadoBovino(
idEstadoDelBovino int,
idBovino int,
fechaInicio date not null,
fechaFinalizacion date,
primary key(idEstadoDelBovino,idBovino,fechaInicio),
constraint FK_EstadoEsetadoDelBovino foreign key(idEstadoDelBovino) references EstadoDelbovino(idEstadoDelBovino),
constraint FK_EstadoBovino foreign key(idBovino) references Bovino(idBovino)
);

create table EventoFuturo(
idEventoFuturo int auto_increment primary key,
tipo varchar(30) not null,
fechaPrevista date not null,
idHembra int not null,
constraint FK_Evento_Hembra foreign key(idHembra) references Hembra(idHembra)
);

create table BajaLogicaBovino (
idBajaLogicaBovino int auto_increment primary key,
idBovino int not null,
fechaBaja date not null,
motivo varchar(30) not null,
constraint FK_BajaLogicaBovinoBovino foreign key(idBovino) references Bovino(idBovino)
);

create table Pedigree (
numeroPedigree varchar(30) primary key,
idBovino int not null,
constraint FK_PedigreeBovino foreign key(idBovino) references Bovino(idBovino)
);

insert into estadodelbovino (estado) values("Preñez");
insert into estadodelbovino (estado) values("Secada");
insert into estadodelbovino (estado) values("Enfermo");
insert into estadodelbovino (estado) values("Inseminada");
insert into estadodelbovino (estado) values("Produccion");